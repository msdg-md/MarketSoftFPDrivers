<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="5" xml:space="preserve">
    <value>Механизм печатающего устройства неисправен.</value>
  </data>
  <data name="4" xml:space="preserve">
    <value>Получен некорректный пакет от фискального принтера.</value>
  </data>
  <data name="7" xml:space="preserve">
    <value>Полученые данные содержат синтаксическую ошибку.</value>
  </data>
  <data name="6" xml:space="preserve">
    <value>Код полученой комманды неверен.</value>
  </data>
  <data name="1" xml:space="preserve">
    <value>Некорректный тип порта.</value>
  </data>
  <data name="3" xml:space="preserve">
    <value>Фискальный принтер был занят слишком долго.</value>
  </data>
  <data name="2" xml:space="preserve">
    <value>Получен отказ от принтера.</value>
  </data>
  <data name="9" xml:space="preserve">
    <value>Операция, связанная с печатью прекращена и перезапущена.</value>
  </data>
  <data name="8" xml:space="preserve">
    <value>Содержимое оперативной памяти было разрушено.</value>
  </data>
  <data name="41" xml:space="preserve">
    <value>mdl</value>
  </data>
  <data name="40" xml:space="preserve">
    <value>Возврат</value>
  </data>
  <data name="43" xml:space="preserve">
    <value>Сasier</value>
  </data>
  <data name="42" xml:space="preserve">
    <value>TVA</value>
  </data>
  <data name="45" xml:space="preserve">
    <value>Datecs FP3530T(1.10) md</value>
  </data>
  <data name="44" xml:space="preserve">
    <value>Datecs FP-700 MD</value>
  </data>
  <data name="47" xml:space="preserve">
    <value>Задержка после печати позиции, мск</value>
  </data>
  <data name="46" xml:space="preserve">
    <value>Отсутствует лицензия для фискального регистратора. Серийный номер регистратора : '{0}'.</value>
  </data>
  <data name="49" xml:space="preserve">
    <value>Добавлять обороты по оплатам</value>
  </data>
  <data name="48" xml:space="preserve">
    <value>Exellio FPU-550/FPU-260</value>
  </data>
  <data name="50" xml:space="preserve">
    <value>Да</value>
  </data>
  <data name="51" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="52" xml:space="preserve">
    <value>Datecs FP3530T(1.31) md</value>
  </data>
  <data name="53" xml:space="preserve">
    <value>Datecs FP3530T(2.0) md</value>
  </data>
  <data name="54" xml:space="preserve">
    <value>Скорость</value>
  </data>
  <data name="14" xml:space="preserve">
    <value>Ошибка записи в фискальную память.</value>
  </data>
  <data name="15" xml:space="preserve">
    <value>Последнее фискальное закрытие завершилось ошибкой.</value>
  </data>
  <data name="16" xml:space="preserve">
    <value>Фискальная память установлена в режим "Только чтение".</value>
  </data>
  <data name="17" xml:space="preserve">
    <value>Фискальный принтер не был открыт.</value>
  </data>
  <data name="10" xml:space="preserve">
    <value>Совершено аварийное обнуление памяти.</value>
  </data>
  <data name="11" xml:space="preserve">
    <value>Выполняемая команда не разрешена для текущего фискального режима принтера.</value>
  </data>
  <data name="12" xml:space="preserve">
    <value>Закончилась бумага.</value>
  </data>
  <data name="13" xml:space="preserve">
    <value>Фискальная память переполнена.</value>
  </data>
  <data name="18" xml:space="preserve">
    <value>Ошибка выполнения команды.</value>
  </data>
  <data name="19" xml:space="preserve">
    <value>Фискальная память не форматирована.</value>
  </data>
  <data name="27" xml:space="preserve">
    <value>Функция не поддерживается фискальным принтером.</value>
  </data>
  <data name="26" xml:space="preserve">
    <value>Неизвестная ошибка.</value>
  </data>
  <data name="25" xml:space="preserve">
    <value>Сумма по некоторой налоговой группе отрицательна.</value>
  </data>
  <data name="24" xml:space="preserve">
    <value>Сумма оплаты больше суммы чека.</value>
  </data>
  <data name="23" xml:space="preserve">
    <value>Cумма оплаты меньше суммы чека.</value>
  </data>
  <data name="22" xml:space="preserve">
    <value>Вычисленная сумма отрицательна.</value>
  </data>
  <data name="21" xml:space="preserve">
    <value>Нефискальный чек уже открыт.</value>
  </data>
  <data name="20" xml:space="preserve">
    <value>Открыт фискальный чек.</value>
  </data>
  <data name="29" xml:space="preserve">
    <value>Документ уже был открыт.</value>
  </data>
  <data name="28" xml:space="preserve">
    <value>Сec null</value>
  </data>
  <data name="36" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="37" xml:space="preserve">
    <value>Сumpărător: </value>
  </data>
  <data name="34" xml:space="preserve">
    <value>Документ небыл открыт.</value>
  </data>
  <data name="35" xml:space="preserve">
    <value>Некорректная налоговая ставка.</value>
  </data>
  <data name="32" xml:space="preserve">
    <value>Возврат по чеку N </value>
  </data>
  <data name="33" xml:space="preserve">
    <value>Копия чека N </value>
  </data>
  <data name="30" xml:space="preserve">
    <value>Casa# </value>
  </data>
  <data name="31" xml:space="preserve">
    <value>Bon# </value>
  </data>
  <data name="38" xml:space="preserve">
    <value>REDUCERE:</value>
  </data>
  <data name="39" xml:space="preserve">
    <value>TOTAL: </value>
  </data>
  <data name="55" xml:space="preserve">
    <value>Весы. Очищать инфо по Z</value>
  </data>
</root>